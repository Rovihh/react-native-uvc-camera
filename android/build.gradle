
buildscript {
    ext.safeExtGet = {prop, fallback ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
    repositories {
        jcenter()
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet("kotlinVersion", "1.8.0")}")
        classpath 'com.android.tools.build:gradle:1.3.1'
    }
}

def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

apply plugin: 'com.android.library'
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

android {
    buildToolsVersion safeExtGet("buildToolsVersion", "34.0.0")
    compileSdkVersion safeExtGet("compileSdkVersion", 34)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", 23)
        targetSdkVersion safeExtGet("targetSdkVersion", 34)
    }
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        dataBinding true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    api('com.github.chenyeju295.AndroidUSBCamera:libausbc:3.3.6')
    api('com.github.chenyeju295.AndroidUSBCamera:libuvc:3.3.6')
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module('com.github.jiangdongguo.AndroidUSBCamera:libausbc') using module('com.github.chenyeju295.AndroidUSBCamera:libausbc:3.3.6')
        }
    }
}
